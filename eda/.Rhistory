bar_plot2013 <- plot_ly(t2013,
x = ~State, y = ~X2013_Victims, type = "bar",
name = "2013 Victims") %>%
add_trace(y = ~X2013_Fatalities, name = "2013 Fatalities") %>%
layout(
title = "2013 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge")
bar_plot2013
runApp()
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad')
runApp('~/Desktop/informatics/4.0-bound-squad')
runApp('~/Desktop/informatics/4.0-bound-squad')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad')
runApp('~/Desktop/informatics/4.0-bound-squad')
page_one <- tabPanel(
"Introduction",
h1(strong("Overview")),img(src='kids.jpeg', align = "right"),
tags$head(tags$style('body {color:purple;}')),
h4("Our project’s goal is to analyze children fatalities and victims through the foster system,
specifically in the state of New York. We will be working with the Child Victim and Fatalities
data in the U.S. obtained through the healthdata website which publishes a large amount of
information containing state-level counts, percentages, and rates for select findings from the
National Child Abuse and Neglect Data System (NCANDS)."),
h1(strong("Audiences")),
h4("Our targeted audience will be social workers, parents and the general society.
We anticipate the public to be more aware of the number of child fatalities and victims
that can be linked to the foster system. We hope that our insights will bring to public
light the link between children in foster care and the number of child fatalities annually.
This data may help people thinking about putting their unborn children in foster care or
at least understand the possible consequences associated with foster care."
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
page_one <- tabPanel(
"Introduction",
h1(strong("Overview")),img(src='kids.jpeg', align = "right"),
tags$head(tags$style('body {color:purple;}')),
h4("Our project’s goal is to analyze children fatalities and victims through the foster system,
specifically in the state of New York. We will be working with the Child Victim and Fatalities
data in the U.S. obtained through the healthdata website which publishes a large amount of
information containing state-level counts, percentages, and rates for select findings from the
National Child Abuse and Neglect Data System (NCANDS)."),
h1(strong("Audiences")),
h4("Our targeted audience will be social workers, parents and the general society.
We anticipate the public to be more aware of the number of child fatalities and victims
that can be linked to the foster system. We hope that our insights will bring to public
light the link between children in foster care and the number of child fatalities annually.
This data may help people thinking about putting their unborn children in foster care or
at least understand the possible consequences associated with foster care."
runApp('~/Desktop/informatics/finalproject/app_final.R')
runApp('~/Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('Desktop/informatics/4.0-bound-squad/app_final.R')
page_one <- tabPanel(
"Introduction",
h1(strong("Overview")),img(src='kids.jpeg', align = "right"),
tags$head(tags$style('body {color:purple;}')),
h4("Our project’s goal is to analyze children fatalities and victims through the foster system,
specifically in the state of New York. We will be working with the Child Victim and Fatalities
data in the U.S. obtained through the healthdata website which publishes a large amount of
information containing state-level counts, percentages, and rates for select findings from the
National Child Abuse and Neglect Data System (NCANDS)."),
h1(strong("Audiences")),
h4("Our targeted audience will be social workers, parents and the general society.
We anticipate the public to be more aware of the number of child fatalities and victims
that can be linked to the foster system. We hope that our insights will bring to public
light the link between children in foster care and the number of child fatalities annually.
This data may help people thinking about putting their unborn children in foster care or
at least understand the possible consequences associated with foster care."
my_server <- function(input, output) {
output$my_plot <- renderPlotly({
plot_ly(
data = data,
labels = ~State,
values = data[[input$year]],
type = "pie",
mode = "markers") %>%
layout(title = 'Percentage each state had of overall deaths in 2014',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "State"),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "year of total children fatalities"))
})
output$histogram_plot <- renderPlotly({
plot_ly(t2017,
x = t2017$State,
y = t2017[[input$choice]],
type = "bar",
name = "2017 Victims") %>%
layout(
title = "2017 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge")
})
output$bar_plot2013 <- renderPlotly({
plot_ly(t2013,
x = t2013$State,
y = t2013[[input$choice2]],
type = "bar",
name = "2013 Victims") %>%
layout(
title = "2013 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge"
)
})
output$plot_NY <- renderPlotly({
plot_ly(children_1,
x = children_1$County,
y = children_1[[input$stats_NY]],
type = "bar",
# everytime plotly grabs the x, it's grabbing the entire column instead of a row.
# how to grab one singulary county...
name = "CPS") %>%
# add_trace(y = ~Admissions, name = "Admissions") %>%
layout(
title = "Admissions into foster care compared to CPS reports by County",
xaxis = list(title = "County in NY"),
yaxis = list(title = ""),
margin = list(b=100),
barmode = "group"
)
})
}
page_one <- tabPanel(
"Introduction",
h1(strong("Overview")),img(src='kids.jpeg', align = "right"),
tags$head(tags$style('body {color:purple;}')),
h4("Our project’s goal is to analyze children fatalities and victims through the foster system,
specifically in the state of New York. We will be working with the Child Victim and Fatalities
data in the U.S. obtained through the healthdata website which publishes a large amount of
information containing state-level counts, percentages, and rates for select findings from the
National Child Abuse and Neglect Data System (NCANDS)."),
h1(strong("Audiences")),
h4("Our targeted audience will be social workers, parents and the general society.
We anticipate the public to be more aware of the number of child fatalities and victims
that can be linked to the foster system. We hope that our insights will bring to public
light the link between children in foster care and the number of child fatalities annually.
This data may help people thinking about putting their unborn children in foster care or
at least understand the possible consequences associated with foster care."
my_server <- function(input, output) {
output$my_plot <- renderPlotly({
plot_ly(
data = data,
labels = ~State,
values = data[[input$year]],
type = "pie",
mode = "markers") %>%
layout(title = 'Percentage each state had of overall deaths in 2014',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "State"),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "year of total children fatalities"))
})
output$histogram_plot <- renderPlotly({
plot_ly(t2017,
x = t2017$State,
y = t2017[[input$choice]],
type = "bar",
name = "2017 Victims") %>%
layout(
title = "2017 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge")
})
output$bar_plot2013 <- renderPlotly({
plot_ly(t2013,
x = t2013$State,
y = t2013[[input$choice2]],
type = "bar",
name = "2013 Victims") %>%
layout(
title = "2013 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge"
)
})
output$plot_NY <- renderPlotly({
plot_ly(children_1,
x = children_1$County,
y = children_1[[input$stats_NY]],
type = "bar",
# everytime plotly grabs the x, it's grabbing the entire column instead of a row.
# how to grab one singulary county...
name = "CPS") %>%
# add_trace(y = ~Admissions, name = "Admissions") %>%
layout(
title = "Admissions into foster care compared to CPS reports by County",
xaxis = list(title = "County in NY"),
yaxis = list(title = ""),
margin = list(b=100),
barmode = "group"
)
})
}
page_one <- tabPanel(
"Introduction",
h1(strong("Overview")),img(src='kids.jpeg', align = "right"),
tags$head(tags$style('body {color:purple;}')),
h4("Our project’s goal is to analyze children fatalities and victims through the foster system,
specifically in the state of New York. We will be working with the Child Victim and Fatalities
data in the U.S. obtained through the healthdata website which publishes a large amount of
information containing state-level counts, percentages, and rates for select findings from the
National Child Abuse and Neglect Data System (NCANDS)."),
h1(strong("Audiences")),
h4("Our targeted audience will be social workers, parents and the general society.
We anticipate the public to be more aware of the number of child fatalities and victims
that can be linked to the foster system. We hope that our insights will bring to public
light the link between children in foster care and the number of child fatalities annually.
This data may help people thinking about putting their unborn children in foster care or
at least understand the possible consequences associated with foster care."
),
)
data <- read.csv("finaldata/child-fatalities.csv", stringsAsFactors = FALSE)
# import data
child_fatalities <- read.csv("finaldata/child-fatalities.csv",
stringsAsFactors = FALSE)
child_victims <- read.csv("finaldata/child-victims.csv",
stringsAsFactors = FALSE)
#combining data
cvictims <- child_victims %>%
group_by(State) %>%
select(State,
X2013_Victims = X2013.Victims..unique.count.,
X2014_Victims = X2014.Victims..unique.count.,
X2015_Victims = X2015.Victims..unique.count.,
X2016_Victims = X2016.Victims..unique.count.,
X2017_Victims = X2017.Victims..unique.count.)
cfatalities <- child_fatalities %>%
group_by(State) %>%
select(State,
X2013_Fatalities = X2013.Total.Child.Fatalities,
X2014_Fatalities = X2014.Total.Child.Fatalities,
X2015_Fatalities = X2015.Total.Child.Fatalities,
X2016_Fatalities = X2016.Total.Child.Fatalities,
X2017_Fatalities = X2017.Total.Child.Fatalities)
child_fatalities[53,1] <- "zAll States"
cvictims[53,1] <- "zAll States"
total <- merge(cvictims, cfatalities, by = "State")
#make new column
total$Total_Victims <- as.numeric(gsub(",", "", total$X2013_Victims)) +
as.numeric(gsub(",", "", total$X2014_Victims)) +
as.numeric(gsub(",", "", total$X2015_Victims)) +
as.numeric(gsub(",", "", total$X2016_Victims)) +
as.numeric(gsub(",", "", total$X2017_Victims))
total$Total_Fatalities <- as.numeric(gsub(",", "", total$X2013_Fatalities)) +
as.numeric(gsub(",", "", total$X2014_Fatalities)) +
as.numeric(gsub(",", "", total$X2015_Fatalities)) +
as.numeric(gsub(",", "", total$X2016_Fatalities)) +
as.numeric(gsub(",", "", total$X2017_Fatalities))
#dataframe without all states total
#2013 dataframe
t2013 <- total %>%
group_by(State) %>%
select(State,
X2013_Victims, X2013_Fatalities)
#2017 dataframe
t2017 <- total %>%
group_by(State) %>%
select(State,
X2017_Victims, X2017_Fatalities)
page_four <- tabPanel(
"Page four",
titlePanel("Total Child Fatalities in a chosen year"),
sidebarLayout(
sidebarPanel(
selectInput(inputId = "year",
label = "choose a year",
choices = c("2013" = "X2013.Total.Child.Fatalities",
"2014" = "X2014.Total.Child.Fatalities",
"2015" = "X2015.Total.Child.Fatalities",
"2016" = "X2016.Total.Child.Fatalities",
"2017" = "X2017.Total.Child.Fatalities")
),
),
mainPanel(
plotlyOutput("my_plot")
)
)
)
page_three <- tabPanel(
"Page three",
titlePanel("Total Children Victims and Fatalities in 2017"),
sidebarLayout(
sidebarPanel(
radioButtons(
inputId = "choice",
label = "Choose Total Vicitms or Fatalities",
choices = c("2017 Victims" = "X2017_Victims",
"2017 Fatalities" = "X2017_Fatalities")
),
),
mainPanel(
plotlyOutput("histogram_plot")
)
)
)
page_two <- tabPanel(
"Page two",
titlePanel("Total Children Victims and Fatalities in 2013"),
sidebarLayout(
sidebarPanel(
radioButtons(
inputId = "choice2",
label = "Choose Total Vicitms or Fatalities",
choices = c("2013 Victims" = "X2013_Victims",
"2013 Fatalities" = "X2013_Fatalities")
),
),
mainPanel(
plotlyOutput("bar_plot2013")
)
)
)
children <- read.csv("finaldata/children.csv", stringsAsFactors = FALSE)
children_1 <- children %>%
group_by(County) %>%
mutate(CPS = Indicated.CPS.Reports, Admissions = Admissions, Year = Year, Discharges = Discharges) %>%
select(County, Year, CPS, Admissions, Discharges)
page_five <- tabPanel("Page five",
titlePanel("Admitted children into Foster Care vs. Indicated CPS Reports in NY"),
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "stats_NY",
label = "County",
choices = c("CPS","Admissions", "Discharges"),
),
),
mainPanel(
plotlyOutput("plot_NY")
)
))
page_six <- tabPanel(
"Conclusion",
h1(strong("Summary")),
h3(strong("Children Fatalities and Victims")),
h5("The second and third page tab shows the 2013 and 2017 Children Victims or Fatalities. This allows user to
input a either Victims or Fatalities to see the number of victims and fatalities total in each state
from 2013 or 2017. The user can check the number of victims vs. fatalities
in either year 2013 or 2017 between states and observe the difference."),
h3(strong("Children Deaths by state each year")),
h5("The page four tab shows the Total Children Fatalities by State in a chosen year is used to
look at individual years from the dataset and view each state’s percentage of overall child deaths
in the total dataset.This helps the viewer not only analyze the trend of growth or shrinkage as years
increase but also visualizes top states where this issue is most impactful, in this case being
Texas every year in a positive growing trend."),
h3(strong("Children Admitted to Foster Care vs. Child Protective Services by County")),
h5("The Admitted children into Foster Care vs. Indicated CPS Reports in NY tab, is located
on page five, and can be utilized to view the amount of kids put into foster care,
annually, and comparing this number with the total amount of reports filed with the
Children’s Protective Services. This gives insight to the correlation between for CPS
reports and the total amount of children in foster care, who are the most vulnerable to such acts."
)
)
my_ui <- navbarPage(
theme = shinytheme("sandstone"),
"Children Mortaliity Rates in Foster Care System",
page_one,
page_two,
page_three,
page_four,
page_five,
page_six
)
my_server <- function(input, output) {
output$my_plot <- renderPlotly({
plot_ly(
data = data,
labels = ~State,
values = data[[input$year]],
type = "pie",
mode = "markers") %>%
layout(title = 'Percentage each state had of overall deaths in 2014',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "State"),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE, title = "year of total children fatalities"))
})
output$histogram_plot <- renderPlotly({
plot_ly(t2017,
x = t2017$State,
y = t2017[[input$choice]],
type = "bar",
name = "2017 Victims") %>%
layout(
title = "2017 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge")
})
output$bar_plot2013 <- renderPlotly({
plot_ly(t2013,
x = t2013$State,
y = t2013[[input$choice2]],
type = "bar",
name = "2013 Victims") %>%
layout(
title = "2013 Victims vs. Fatalities",
xaxis = list(title = "States", tickangle = -45),
yaxis = list(title = "# of Children"),
margin = list(b = 100),
barmode = "dodge"
)
})
output$plot_NY <- renderPlotly({
plot_ly(children_1,
x = children_1$County,
y = children_1[[input$stats_NY]],
type = "bar",
# everytime plotly grabs the x, it's grabbing the entire column instead of a row.
# how to grab one singulary county...
name = "CPS") %>%
# add_trace(y = ~Admissions, name = "Admissions") %>%
layout(
title = "Admissions into foster care compared to CPS reports by County",
xaxis = list(title = "County in NY"),
yaxis = list(title = ""),
margin = list(b=100),
barmode = "group"
)
})
}
runApp('Desktop/informatics/4.0-bound-squad/app_final.R')
View(cfatalities)
View(child_fatalities)
runApp('Desktop/informatics/4.0-bound-squad/app_final.R')
runApp('Desktop/informatics/4.0-bound-squad/app_final.R')
setwd("~/Desktop/info478/Group-7/eda")
plot1 <- barplot(living_vs_deceased$To.Date, names.arg= living_vs_deceased$Donors, col = rainbow(400000),
xlab ="Types of Donors", ylab="Number of Donors", main="Living vs. Deceased Donors",
beside=TRUE, ylim=range(pretty(c(0, living_vs_deceased$Donors)), ylim=c(0,400000)))
iving_vs_deceased <- read.csv(file = 'distributiondata.csv')
living_vs_deceased <- read.csv(file = 'distributiondata.csv')
plot1 <- barplot(living_vs_deceased$To.Date, names.arg= living_vs_deceased$Donors, col = rainbow(400000),
xlab ="Types of Donors", ylab="Number of Donors", main="Living vs. Deceased Donors",
beside=TRUE, ylim=range(pretty(c(0, living_vs_deceased$Donors)), ylim=c(0,400000)))
View(living_vs_deceased)
plot1 <- barplot(living_vs_deceased$To.Date, names.arg= living_vs_deceased$Donors, col = rainbow(400000),
xlab ="Types of Donors", ylab="Number of Donors", main="Living vs. Deceased Donors (1988-2020)",
beside=TRUE, ylim=range(pretty(c(0, living_vs_deceased$Donors)), ylim=c(0,400000)))
setwd("~/Desktop/info478/Group-7/eda")
knitr::opts_chunk$set(echo = TRUE)
library("knitr")
library("plotly")
library("httr")
source("living vs deceased distribution.R")
knitr::opts_chunk$set(echo = TRUE)
library("knitr")
library("plotly")
library("httr")
source("livingvsdeceaseddistribution.R")
install.packages("ggplot2")
setwd("~/Desktop/info478/Group-7/eda")
#Donor Type Plot
donor_type <- living_vs_deceased %>%
select(Donors, Genders, Ages, To.Date)%>%
filter(Ages== ("All Ages"),
Genders== ("All Genders")
)
plot1 <- ggplot(data=donor_type, aes(x=Donors, y=To.Date)) +
xlab("Types of Donors") + ylab("Number of Donors") + ggtitle("Living vs. Deceased Donors") +
geom_bar(stat="identity", fill="steelblue")
living_vs_deceased <- read.csv(file = 'distributiondata.csv')
living_vs_deceased <- living_vs_deceased %>%
rename(
Donors = X,
Genders = X.1,
Ages = X.2
)
library(dplyr)
library(ggplot2)
install.packages("ggplot2")
living_vs_deceased <- read.csv(file = 'distributiondata.csv')
living_vs_deceased <- living_vs_deceased %>%
rename(
Donors = X,
Genders = X.1,
Ages = X.2
)
install.packages("ggplot2")
#Donor Type Plot
donor_type <- living_vs_deceased %>%
select(Donors, Genders, Ages, To.Date)%>%
filter(Ages== ("All Ages"),
Genders== ("All Genders")
)
plot1 <- ggplot(data=donor_type, aes(x=Donors, y=To.Date)) +
xlab("Types of Donors") + ylab("Number of Donors") + ggtitle("Living vs. Deceased Donors") +
geom_bar(stat="identity", fill="steelblue")
View(living_vs_deceased)
