population <- read.csv('population.csv')
sentences <- read.csv('sentences.csv')
library(dplyr)
library(ggplot2)
graphs <- read.csv('graphs.csv')
population <- read.csv('population.csv')
sentences <- read.csv('sentences.csv')
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
library(dplyr)
library(ggplot2)
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/a1-scuj")
deaths_data <- read.csv('data/deaths.csv')
le_data <- read.csv('data/life_expectancy.csv')
ylds_data <- read.csv('data/ylds.csv')
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable")
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
graphs <- read.csv('data/graphs.csv')
graphs <- read.csv('data/graphs.csv')
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
graphs
View(population)
kable(population)
library(dplyr)
library(ggplot2)
kable(population)
library(knitr)
kable(population)
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
kable(population)
population <- read.csv('data/population.csv')
kable(population)
kable(population, col.names = c("Total", "", "10,000"))
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
View(graphs)
graphs%>% select(Question == "WaitlistDie")
graphs%>% filter(Question == "WaitlistDie")
graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
library(shiny)
runApp()
kable(population, col.names = c("Total", "", "10,000"))
kable(population, col.names = c("Total", "", "10,000"))
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable")
library(dplyr)
library(knitr)
library(ggplot2)
graphs <- read.csv('data/graphs.csv')
population <- read.csv('data/population.csv')
sentences <- read.csv('data/sentences.csv')
kable(population, col.names = c("Total", "", "10,000"))
graphs%>% filter(Question == "SignedUp") %>% select(Response,Percent)
graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
graphs%>% filter(Question == "TransplantSupport") %>% select(Response,Percent)
graphs%>% filter(Question == "DeathDonate") %>% select(Response,Percent)
runApp()
signedup <- graphs%>% filter(Question == "SignedUp") %>% select(Response,Percent)
pie(signedup, main="Pie Chart of Countries")
signedupR <- graphs%>% filter(Question == "SignedUp") %>% select(Response)
signedupP <- graphs%>% filter(Question == "SignedUp") %>% select(Percent)
pie(signedupP, labels = signedupR, main="Pie Chart of Countries")
pie(signedupP, main="Pie Chart of Countries")
signedupP
signedupP <- table(graphs%>% filter(Question == "SignedUp") %>% select(Percent))
pie(signedupP, main="Pie Chart of Countries")
pie(signedupP,labels = signedupR, main="Pie Chart of Countries")
pie(signedupP, main="Pie Chart of Countries")
signedupP <- table(graphs%>% filter(Question == "SignedUp") %>% select(Response,Percent))
pie(signedupP, main="Pie Chart of Countries")
signedupP <- table(graphs%>% filter(Question == "SignedUp") %>% select(Percent))
pie(signedupP, main="Pie Chart of Countries")
willing <- graphs%>% table(filter(Question == "Willing") %>% select(Percent))
pie(willing)
willing <- table(graphs%>%filter(Question == "Willing") %>% select(Percent))
pie(willing)
signedup <- graphs%>% filter(Question == "SignedUp") %>% select(Response, Percent)
willing <- graphs%>%filter(Question == "Willing") %>% select(Response, Percent)
kable(signedup)
kable(willing)
graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
transplantSupport <- graphs%>% filter(Question == "TransplantSupport") %>% select(Response,Percent)
deathDonate <- graphs%>% filter(Question == "DeathDonate") %>% select(Response,Percent)
# stacked bar
kidney <- graphs%>% filter(Question == "Kidney") %>% select(Response,Percent)
liver <- graphs%>% filter(Question == "Liver") %>% select(Response,Percent)
lung <- graphs%>% filter(Question == "Lung") %>% select(Response,Percent)
ggplot(waitlistDie)
ggplot(waitlistDie)
ggplot(transplantSupport)
transplantSupport
ggplot(transplantSupport)+ geom_col(mapping = aes)
ggplot(top_ten_death_causes)
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/a1-scuj")
top_ten_death_causes <- cause_mean %>%
arrange(-deaths) %>%
top_n(n=10, w = deaths) %>%
mutate(
rank = rank(desc(deaths)),
deaths = round((deaths), 2)
) %>%
select(rank,Group.1, deaths)
---
title: "INFO 478 a-1 Health Burden"
author: "Savannah Umali-Jepson"
output: html_document
---
------
```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Set up
library(dplyr)
library(knitr)
library(ggplot2)
# Load data
deaths_data <- read.csv('data/deaths.csv')
le_data <- read.csv('data/life_expectancy.csv')
ylds_data <- read.csv('data/ylds.csv')
# Aggregate data
death_le_data <- left_join(deaths_data,le_data)
boh_data <- left_join(death_le_data, ylds_data)
#Create YLL column
boh_data$ylls[1] = boh_data$deaths[1] * boh_data$life.expectancy[1]
#Create DALY column
boh_data$dalys[1] = boh_data$ylds[1] + boh_data$ylls[1]
#Fill YLL and DALY column
interval <- 1
while (interval < nrow(boh_data) + 1) {
boh_data$dalys[interval] = boh_data$ylds[interval] + boh_data$ylls[interval]
boh_data$ylls[interval] = boh_data$deaths[interval] * boh_data$life.expectancy[interval]
interval <- interval +1
}
```
# Metrics of Population Health
Define the following metrics and concepts:
* __Years of Life Lost__ (YLL)
+ YLL is a summarized measure of premature mortality. It estimates the years of potential life lost due to premature deaths.
+ YLL is calculated from the number of deaths multiplied by the standard life expectancy at the age
at which death occurs.
+ YLL = number of deaths X standard life expectancy at age of death in years
* __Years Lived with Disability__ (YLD)
+ YLD is the summarized measure of years healthy life lost due to ill-health or disability. Different disabilties and illnesses have their       own unique imparament severity and prevelence.
+ YLD is calculatted from from the number of prevelant cases (prevalence) multiplyed by the imparement severity (disability weight) in a         population.
+ YLD = prevalence X disability weight
* __Disability Adjusted Life Years__ (DALY)
+ DALY is a sumarized measure of overall burden of disease. It expresses the number of years lost due to ill-health, disability or early         death.
+ DALY is calculated from the sum of the Years of Life Lost (YLL) and the Years Lost due to Disability (YLD) in a population.
+ DALY = YLL + YLD
* Describe how disability weights were estimated in the paper presented
* Define age-weighting and discounting, and make an argument for why you believe each one should or shouldn't be included in the calculation of DALYs
# Differences in Health Burden by Cause
```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Cause
cause_mean <- aggregate(boh_data, by=list(boh_data$cause_name), FUN = mean, na.rm =TRUE)
#death
top_ten_death_causes <- cause_mean %>%
arrange(-deaths) %>%
top_n(n=10, w = deaths) %>%
mutate(
rank = rank(desc(deaths)),
deaths = round((deaths), 2)
) %>%
select(rank,Group.1, deaths)
ggplot(top_ten_death_causes) + geom_col(mapping = aes(x = reorder(Group.1,deaths), y = deaths)) + coord_flip()
#yll
top_ten_ylls_causes <- cause_mean %>%
arrange(-ylls) %>%
top_n(n=10, w = ylls) %>%
mutate(
rank = rank(desc(ylls)),
ylls = round((ylls), 2)
) %>%
select(rank,Group.1, ylls)
ggplot(top_ten_ylls_causes) + geom_col(mapping = aes(x = reorder(Group.1,ylls), y = ylls)) + coord_flip()
```
# Differences in Health Burden by Age
Here we are looking at how age affects YLD vs DALY. Below we have two
```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Age
age_mean <- aggregate(boh_data, by=list(boh_data$age), FUN = mean, na.rm =TRUE)
#yld
top_ten_ylds_ages <- age_mean %>%
arrange(-ylds) %>%
top_n(n=10, w = ylds) %>%
mutate(
rank = rank(desc(ylds)),
ylds =  round((ylds * 100), 2)
) %>%
select(rank,Group.1, ylds)
kable(top_ten_ylds_ages , col.names = c("Rank", "Cause", "Average # of YLDs"))
#daly
top_ten_dalys_age <- age_mean %>%
arrange(-dalys) %>%
top_n(n=10, w = dalys) %>%
mutate(
rank = rank(desc(dalys)),
dalys =  round((dalys * 100), 2)
) %>%
select(rank,Group.1, dalys)
kable(top_ten_dalys_age , col.names = c("Rank", "Cause", "Average # of DALYs"))
```
# Differences in Health Burden by Sex
```{r, message=FALSE, warning=FALSE, echo=FALSE}
# Sex
sex_mean <- aggregate(boh_data, by=list(boh_data$sex), FUN = mean, na.rm =TRUE)
#yll
top_ten_ylls_sex <- sex_mean %>%
arrange(-ylls) %>%
top_n(n=10, w = ylls) %>%
mutate(
rank = rank(desc(ylls)),
ylls = round((ylls), 2)
) %>%
select(rank,Group.1, ylls)
ggplot(top_ten_ylls_sex) + geom_col(mapping = aes(x = reorder(Group.1,ylls), y = ylls)) + coord_flip()
#yld
top_ten_ylds_sex <- sex_mean %>%
arrange(-ylds) %>%
top_n(n=10, w = ylds) %>%
mutate(
rank = rank(desc(ylds)),
ylds =  round((ylds * 100), 2)
) %>%
select(rank,Group.1, ylds)
ggplot(top_ten_ylds_sex) + geom_col(mapping = aes(x = reorder(Group.1,ylds), y = ylds)) + coord_flip()
#daly
top_ten_dalys_sex <- sex_mean %>%
arrange(-dalys) %>%
top_n(n=10, w = dalys) %>%
mutate(
rank = rank(desc(dalys)),
dalys =  round((dalys * 100), 2)
) %>%
select(rank,Group.1, dalys)
ggplot(top_ten_dalys_sex) + geom_col(mapping = aes(x = reorder(Group.1,dalys), y = dalys)) + coord_flip()
```
top_ten_death_causes <- cause_mean %>%
arrange(-deaths) %>%
top_n(n=10, w = deaths) %>%
mutate(
rank = rank(desc(deaths)),
deaths = round((deaths), 2)
) %>%
select(rank,Group.1, deaths)
ggplot(top_ten_death_causes)
ggplot(top_ten_death_causes) + geom_col(mapping = aes(x = reorder(Group.1,deaths), y = deaths))
ggplot(top_ten_death_causes) + geom_col(mapping = aes(x = reorder(Group.1,deaths), y = deaths)) + coord_flip()
top_ten_death_causes
top_ten_death_causes <- cause_mean %>%
arrange(-deaths) %>%
top_n(n=10, w = deaths) %>%
mutate(
rank = rank(desc(deaths)),
deaths = round((deaths), 2)
) %>%
select(rank,Group.1, deaths)
ggplot(top_ten_death_causes) + geom_col(mapping = aes(x = reorder(Group.1,deaths), y = deaths)) + coord_flip()
ggplot(top_ten_death_causes)
ggplot(top_ten_death_causes) + geom_col(mapping = aes(x = reorder(Group.1,deaths), y = deaths))
transplantSupport
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent )
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent ))
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent ))
transplantSupport <- graphs%>% filter(Question == "TransplantSupport") %>% arrange(-Percent) %>% select(Response,Percent)
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent ))
transplantSupport <- graphs %>% arrange(-Percent) %>% filter(Question == "TransplantSupport")  %>% select(Response,Percent)
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent ))
transplantSupport
transplantSupport <- graphs %>% filter(Question == "TransplantSupport")  %>% select(Response,Percent)
ggplot(transplantSupport) + geom_col(mapping = aes(x = transplantSupport$Response , y =transplantSupport$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = waitlistDie$Response , y = waitlistDie$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = waitlistDie$Response , y = waitlistDie$Percent ))
ggplot(deathDonate) + geom_col(mapping = aes(x = deathDonate$Response , y = deathDonate$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = waitlistDie$Response , y = waitlistDie$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = waitlistDie$Percent ))
ggplot(transplantSupport) + geom_col(mapping = aes(x = reorder(transplantSupport$Response, -transplantSupport$Percent) , y =transplantSupport$Percent ))
ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(deathDonate$Response, -deathDonate$Percent) , y = deathDonate$Percent ))
ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(deathDonate$Response, -deathDonate$Response) , y = deathDonate$Percent ))
ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(deathDonate$Response, -deathDonate$Percent) , y = deathDonate$Percent ))
kidney
counts <- table(kidney, liver, lung)
counts
barplot(counts, main="Car Distribution by Gears and VS",
xlab="Number of Gears", col=c("darkblue","red"),
legend = rownames(counts), beside=TRUE)
barplot(counts)
kable(population, col.names = c("Total", "", "10,000"))
kable(top_ten_dalys_age , col.names = c("Rank", "Cause", "Average # of DALYs"))
ggplot(kidney) + geom_col(mapping = aes(x = reorder(kidney$Response, -kidney$Percent) , y = kidney$Percent ))
ggplot(liver) + geom_col(mapping = aes(x = reorder(liver$Response, -liver$Percent) , y = liver$Percent ))
ggplot(lung) + geom_col(mapping = aes(x = reorder(lung$Response, -luung$Percent) , y = lung$Percent ))
ggplot(lung) + geom_col(mapping = aes(x = reorder(lung$Response, -lung$Percent) , y = lung$Percent ))
signedup <- graphs%>% filter(Question == "SignedUp") %>% select(Response, Percent)
signedup
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = waitlistDie$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = waitlistDie$Percent ),color=dose)
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = waitlistDie$Percent ),fill(dose))
library(magrittr)
runApp('C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable')
tableSignedUp <- kable(signedup)
tableWilling <- kable(willing)
source("survey.R")
source("survey.R")
source("survey.R")
source("donorapp.R")
library(shiny)
library(dplyr)
library(ggplot2)
library(tidyr)
library(magrittr)
library(reshape2)
source("donorapp.R")
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable")
source("donorapp.R")
source("survey.R")
runApp()
page_five <- tabPanel("Survey",
tableSignedUp,
tableWilling,
p("test"))
runApp()
output$tableSignedUp
runApp()
library(dplyr)
library(ggplot2)
library(magrittr)
library(reshape2)
options(stringsAsFactors = F)
runApp()
options(stringsAsFactors = F)
df <- read.csv(file = 'Donors_Recovered_in_the_U.S._by_Donor_Type.csv')
# Drop unknown blood type
df<-df[!(df$Blood.Type=="Unknown"),]
num_ddonors <- df[(df$Donor.Type=="Deceased Donor" &
df$Blood.Type == "All ABO" &
df$Organ == "All Donors") ,]
t<- num_ddonors[["To.Date"]]
num_ddonors <- df[(df$Donor.Type=="Deceased Donor" &
df$Blood.Type == "All ABO" &
df$Organ == "All Donors") ,]
num_ddonors <- as.numeric(gsub(",","",num_ddonors$To.Date[[1]]))
num_ldonors <- df[(df$Donor.Type=="Living Donor" &
df$Blood.Type == "All ABO" &
df$Organ == "All Donors") ,]
num_ldonors <- as.numeric(gsub(",","",num_ldonors$To.Date[[1]]))
lbls <- c("Deceased Donor", "Living Donor")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
p1 <- pie(slices, labels = lbls, col=rainbow(length(lbls)),
main="Living vs. Deceased")
slices <- c(num_ddonors, num_ldonors)
lbls <- c("Deceased Donor", "Living Donor")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct)
lbls <- paste(lbls,"%",sep="")
p1 <- pie(slices, labels = lbls, col=rainbow(length(lbls)),
main="Living vs. Deceased")
p1
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = waitlistDie$Percent ))
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(waitlistDie$Response, -waitlistDie$Percent) , y = ylabel))
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent") + labs(fill = "Response")
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent") + geom_point()
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
ggplot(transplantSupport) + geom_col(mapping = aes(x = reorder(transplantSupport$Response, -transplantSupport$Percent) , y =transplantSupport$Percent ))
tslabel <- c("Strongly Support","Support","Oppose","Strongly Oppose")
ggplot(transplantSupport) + geom_col(mapping = aes(x = reorder(tslabel, -transplantSupport$Percent) , y =transplantSupport$Percent )) + ggtitle("Percent of People who Support Transplants") +
xlab("Response") + ylab("Percent")
ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(deathDonate$Response, -deathDonate$Percent) , y = deathDonate$Percent ))
ddlabel <- c("Likely Yes","Likely No","Strong No","Strong Yes")
ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(ddlabel, -deathDonate$Percent) , y = deathDonate$Percent )) + ggtitle("Percent of People who are Willing to Donate Thei Organs After Death") +
xlab("Response") + ylab("Percent")
ggplot(kidney) + geom_col(mapping = aes(x = reorder(kidney$Response, -kidney$Percent) , y = kidney$Percent ))
kidney <- graphs%>% filter(Question == "Kidney") %>% select(Response,Percent)
ggplot(kidney) + geom_col(mapping = aes(x = reorder(kidney$Response, -kidney$Percent) , y = kidney$Percent )) + ggtitle("Percent of People whobelieve that kidney") +
xlab("Response") + ylab("Percent")
liver <- graphs%>% filter(Question == "Liver") %>% select(Response,Percent)
ggplot(liver) + geom_col(mapping = aes(x = reorder(liver$Response, -liver$Percent) , y = liver$Percent ))  + ggtitle("Percent of People whobelieve that liver") +
xlab("Response") + ylab("Percent")
lung <- graphs%>% filter(Question == "Lung") %>% select(Response,Percent) + ggtitle("Percent of People whobelieve that lung") +
xlab("Response") + ylab("Percent")
lung <- graphs%>% filter(Question == "Lung") %>% select(Response,Percent) + ggtitle("Percent of People whobelieve that lung") +
xlab("Response") + ylab("Percent")
ggplot(lung) + geom_col(mapping = aes(x = reorder(lung$Response, -lung$Percent) , y = lung$Percent )) + ggtitle("Percent of People whobelieve that lung") +
xlab("Response") + ylab("Percent")
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
transplantSupport <- graphs %>% filter(Question == "TransplantSupport")  %>% select(Response,Percent)
tslabel <- c("Strongly Support","Support","Oppose","Strongly Oppose")
transSupport <- ggplot(transplantSupport) + geom_col(mapping = aes(x = reorder(tslabel, -transplantSupport$Percent) , y =transplantSupport$Percent )) + ggtitle("Percent of People who Support Transplants") +
xlab("Response") + ylab("Percent")
deathDonate <- graphs%>% filter(Question == "DeathDonate") %>% select(Response,Percent)
ddlabel <- c("Likely Yes","Likely No","Strong No","Strong Yes")
donateDeath <- ggplot(deathDonate) + geom_col(mapping = aes(x = reorder(ddlabel, -deathDonate$Percent) , y = deathDonate$Percent )) + ggtitle("Percent of People who are Willing to Donate Thei Organs After Death") +
xlab("Response") + ylab("Percent")
# stacked bar
kidney <- graphs%>% filter(Question == "Kidney") %>% select(Response,Percent)
kidneys<- ggplot(kidney) + geom_col(mapping = aes(x = reorder(kidney$Response, -kidney$Percent) , y = kidney$Percent )) + ggtitle("Percent of People whobelieve that kidney") +
xlab("Response") + ylab("Percent")
liver <- graphs%>% filter(Question == "Liver") %>% select(Response,Percent)
livers<- ggplot(liver) + geom_col(mapping = aes(x = reorder(liver$Response, -liver$Percent) , y = liver$Percent ))  + ggtitle("Percent of People whobelieve that liver") +
xlab("Response") + ylab("Percent")
lung <- graphs%>% filter(Question == "Lung") %>% select(Response,Percent)
lungs <- ggplot(lung) + geom_col(mapping = aes(x = reorder(lung$Response, -lung$Percent) , y = lung$Percent )) + ggtitle("Percent of People whobelieve that lung") +
xlab("Response") + ylab("Percent")
waitlist
waitlist
transSupport
donateDeath
kidneys
livers
lungs
page_five <- tabPanel("Survey",
waitlist,
transSupport,
donateDeath,
kidneys,
livers,
lungs)
runApp()
runApp()
runApp()
runApp()
sentences
signedup <- graphs%>% filter(Question == "SignedUp") %>% select(Response, Percent)
tableSignedUp <- kable(signedup)
tableSignedUp
tableWilling
waitlist
runApp()
waitlist
runApp()
waitlist
source('C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable/app_ui.R')
runApp()
runApp()
source('C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable/app_ui.R')
runApp()
source('C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable/app_ui.R')
runApp()
runApp()
graphs <- read.csv('data/graphs.csv')
output$waitlist_plot <- renderPlot({
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
+ ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
})
output$waitlist_plot <- ({
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
+ ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
})
graphs <- read.csv('data/graphs.csv')
output$waitlist_plot <- ({
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
})
graphs <- read.csv('data/graphs.csv')
output$waitlist_plot <- renderPlot({
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
})
graphs <- read.csv('data/graphs.csv')
output$waitlist_plot <- renderCachedPlot({
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response,Percent)
ylabel <- c("Strongly Agree", "Somewhat Agree", "Somewhat Disagree", "Strongly Disagree")
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent ))
})
waitlist<- barplot(waitlistDie)
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Percent)
waitlist<- barplot(waitlistDie)
waitlistDie <- graphs%>% filter(Question == "WaitlistDie") %>% select(Response, Percent)
waitlist<- barplot(waitlistDie, waitlistDie$Percent, waitlistDie$Response)
waitlist<- barplot( waitlistDie$Percent, waitlistDie$Response)
runApp()
waitlist<- ggplot(waitlistDie) + geom_col(mapping = aes(x = reorder(ylabel, -waitlistDie$Percent) , y = waitlistDie$Percent )) + ggtitle("Percent of People who Agree that People on the Waitlist Die") +
xlab("Response") + ylab("Percent")
waitlist
runApp()
runApp()
source('C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable/app_ui.R')
setwd("C:/Users/Savannah Umali-Jepso/Desktop/INFO478/Group-7/Final Deliverable")
